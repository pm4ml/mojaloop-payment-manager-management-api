<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="99" failures="0" errors="0" time="2.089">
  <testsuite name="index.js" errors="0" failures="0" skipped="0" timestamp="2025-03-14T08:32:59" time="0.749" tests="6">
    <testcase classname="index.js Exports expected modules" name="index.js Exports expected modules" time="0.005">
    </testcase>
    <testcase classname="RandomPhrase Generator should generate a phrase with 4 parts by default" name="RandomPhrase Generator should generate a phrase with 4 parts by default" time="0.001">
    </testcase>
    <testcase classname="RandomPhrase Generator should generate a phrase with custom separator" name="RandomPhrase Generator should generate a phrase with custom separator" time="0.001">
    </testcase>
    <testcase classname="RandomPhrase Generator should generate different phrases on subsequent calls" name="RandomPhrase Generator should generate different phrases on subsequent calls" time="0">
    </testcase>
    <testcase classname="RandomPhrase Generator should handle empty separator" name="RandomPhrase Generator should handle empty separator" time="0">
    </testcase>
    <testcase classname="RandomPhrase Generator should handle special characters as separators" name="RandomPhrase Generator should handle special characters as separators" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Utils" errors="0" failures="0" skipped="0" timestamp="2025-03-14T08:32:59" time="0.824" tests="21">
    <testcase classname="Utils createTestDb should create a test database with correct configuration" name="Utils createTestDb should create a test database with correct configuration" time="0.007">
    </testcase>
    <testcase classname="Utils addTransferToCache should add transfer with default values" name="Utils addTransferToCache should add transfer with default values" time="0.002">
    </testcase>
    <testcase classname="Utils addTransferToCache should handle error state correctly" name="Utils addTransferToCache should handle error state correctly" time="0">
    </testcase>
    <testcase classname="Utils addTransferToCache should handle pending transfers" name="Utils addTransferToCache should handle pending transfers" time="0.001">
    </testcase>
    <testcase classname="Utils addTransferToCache should update custom amount configurations" name="Utils addTransferToCache should update custom amount configurations" time="0">
    </testcase>
    <testcase classname="Utils addTransferToCache should handle custom timestamps" name="Utils addTransferToCache should handle custom timestamps" time="0.001">
    </testcase>
    <testcase classname="Database Should cache Redis records" name="Database Should cache Redis records" time="0.002">
    </testcase>
    <testcase classname="Cache connect should connect to Redis and handle the ready event" name="Cache connect should connect to Redis and handle the ready event" time="0.001">
    </testcase>
    <testcase classname="Cache connect should throw an error if already connected" name="Cache connect should throw an error if already connected" time="0.018">
    </testcase>
    <testcase classname="Cache disconnect should disconnect the Redis client if connected" name="Cache disconnect should disconnect the Redis client if connected" time="0">
    </testcase>
    <testcase classname="Cache disconnect should do nothing if the Redis client is not connected" name="Cache disconnect should do nothing if the Redis client is not connected" time="0">
    </testcase>
    <testcase classname="Cache set should set a string value in the cache" name="Cache set should set a string value in the cache" time="0">
    </testcase>
    <testcase classname="Cache set should stringify non-string values before setting them" name="Cache set should stringify non-string values before setting them" time="0">
    </testcase>
    <testcase classname="Cache set should throw an error if the client is not connected" name="Cache set should throw an error if the client is not connected" time="0.028">
    </testcase>
    <testcase classname="Cache get should retrieve a value from the cache" name="Cache get should retrieve a value from the cache" time="0.001">
    </testcase>
    <testcase classname="Cache get should throw an error if the client is not connected" name="Cache get should throw an error if the client is not connected" time="0.001">
    </testcase>
    <testcase classname="Cache del should delete a key from the cache" name="Cache del should delete a key from the cache" time="0.001">
    </testcase>
    <testcase classname="Cache del should throw an error if the client is not connected" name="Cache del should throw an error if the client is not connected" time="0.001">
    </testcase>
    <testcase classname="Cache keys should retrieve keys based on a pattern" name="Cache keys should retrieve keys based on a pattern" time="0">
    </testcase>
    <testcase classname="Cache keys should throw an error if the client is not connected" name="Cache keys should throw an error if the client is not connected" time="0.002">
    </testcase>
    <testcase classname="Cache error handling should log errors from the Redis client" name="Cache error handling should log errors from the Redis client" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Control Client" errors="0" failures="0" skipped="0" timestamp="2025-03-14T08:32:59" time="0.849" tests="15">
    <testcase classname="Control Client should construct a Client with the correct properties" name="Control Client should construct a Client with the correct properties" time="0.006">
    </testcase>
    <testcase classname="Control Client should expose the Build getter" name="Control Client should expose the Build getter" time="0.001">
    </testcase>
    <testcase classname="Control Client should create a new Client instance using the Create static method" name="Control Client should create a new Client instance using the Create static method" time="0.001">
    </testcase>
    <testcase classname="Control Client should throw an error if the websocket fails to open during Create" name="Control Client should throw an error if the websocket fails to open during Create" time="0.024">
    </testcase>
    <testcase classname="Control Client should log and send a message through the websocket" name="Control Client should log and send a message through the websocket" time="0.001">
    </testcase>
    <testcase classname="Control Client should handle string messages in send" name="Control Client should handle string messages in send" time="0.002">
    </testcase>
    <testcase classname="Control Client should correctly receive and deserialise a single message" name="Control Client should correctly receive and deserialise a single message" time="0.009">
    </testcase>
    <testcase classname="Control Client should reconfigure the client with new logger and appConfig" name="Control Client should reconfigure the client with new logger and appConfig" time="0.002">
    </testcase>
    <testcase classname="Control Client should handle valid configuration notify message" name="Control Client should handle valid configuration notify message" time="0.001">
    </testcase>
    <testcase classname="Control Client should handle valid configuration patch message" name="Control Client should handle valid configuration patch message" time="0.002">
    </testcase>
    <testcase classname="Control Client should handle unsupported verb" name="Control Client should handle unsupported verb" time="0">
    </testcase>
    <testcase classname="Control Client should handle unsupported message" name="Control Client should handle unsupported message" time="0.001">
    </testcase>
    <testcase classname="Control Client should handle JSON parsing error" name="Control Client should handle JSON parsing error" time="0.001">
    </testcase>
    <testcase classname="Control Client should log a shutdown message and call close() on stop" name="Control Client should log a shutdown message and call close() on stop" time="0.001">
    </testcase>
    <testcase classname="Control Client should generate a PATCH message with correct structure" name="Control Client should generate a PATCH message with correct structure" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="DFSP Class" errors="0" failures="0" skipped="0" timestamp="2025-03-14T08:32:59" time="1.309" tests="10">
    <testcase classname="DFSP Class should initialize correctly" name="DFSP Class should initialize correctly" time="0.033">
    </testcase>
    <testcase classname="DFSP Class getDfspStatus" name="DFSP Class getDfspStatus" time="0.005">
    </testcase>
    <testcase classname="DFSP Class getDfspStatus should call findStatus on DFSPConfigModel" name="DFSP Class getDfspStatus should call findStatus on DFSPConfigModel" time="0.001">
    </testcase>
    <testcase classname="DFSP Class getDfspDetails should return the DFSP details for the given dfspId" name="DFSP Class getDfspDetails should return the DFSP details for the given dfspId" time="0.001">
    </testcase>
    <testcase classname="DFSP Class getAllDfsps should return the list of all DFSPS" name="DFSP Class getAllDfsps should return the list of all DFSPS" time="0.001">
    </testcase>
    <testcase classname="DFSP Class getDfspsByMonetaryZone should return DFSPS for a given monetary zone" name="DFSP Class getDfspsByMonetaryZone should return DFSPS for a given monetary zone" time="0">
    </testcase>
    <testcase classname="DFSP Class Endpoints Operations getEndpoints should return a list of endpoints" name="DFSP Class Endpoints Operations getEndpoints should return a list of endpoints" time="0.001">
    </testcase>
    <testcase classname="DFSP Class Endpoints Operations createEndpoints should create a new endpoint" name="DFSP Class Endpoints Operations createEndpoints should create a new endpoint" time="0">
    </testcase>
    <testcase classname="DFSP Class Endpoints Operations updateEndpoint should update an endpoint" name="DFSP Class Endpoints Operations updateEndpoint should update an endpoint" time="0.001">
    </testcase>
    <testcase classname="DFSP Class Endpoints Operations deleteEndpoint should delete an endpoint" name="DFSP Class Endpoints Operations deleteEndpoint should delete an endpoint" time="0">
    </testcase>
  </testsuite>
  <testsuite name="MonetaryZone" errors="0" failures="0" skipped="0" timestamp="2025-03-14T08:32:59" time="1.336" tests="2">
    <testcase classname="MonetaryZone should initialize correctly" name="MonetaryZone should initialize correctly" time="0.005">
    </testcase>
    <testcase classname="MonetaryZone getMonetaryZones should call getMonetaryZones on MonetaryZoneModel" name="MonetaryZone getMonetaryZones should call getMonetaryZones on MonetaryZoneModel" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Transfer" errors="0" failures="0" skipped="2" timestamp="2025-03-14T08:32:59" time="1.869" tests="45">
    <testcase classname="Transfer /transfers" name="Transfer /transfers" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Transfer /transfers by direction outbound" name="Transfer /transfers by direction outbound" time="0.097">
    </testcase>
    <testcase classname="Transfer /transfers by direction inbound" name="Transfer /transfers by direction inbound" time="0.022">
    </testcase>
    <testcase classname="Transfer /transfers by payee alias MSISDN" name="Transfer /transfers by payee alias MSISDN" time="0.029">
    </testcase>
    <testcase classname="Transfer /transfers by payee alias ACCOUNT_ID" name="Transfer /transfers by payee alias ACCOUNT_ID" time="0.061">
    </testcase>
    <testcase classname="Transfer /hourlyFlow" name="Transfer /hourlyFlow" time="0.033">
    </testcase>
    <testcase classname="Transfer /minuteSuccessfulTransferPerc" name="Transfer /minuteSuccessfulTransferPerc" time="0.038">
    </testcase>
    <testcase classname="Transfer /minuteAverageTransferResponseTime" name="Transfer /minuteAverageTransferResponseTime" time="0.038">
    </testcase>
    <testcase classname="Transfer /transfers by currency" name="Transfer /transfers by currency" time="0.048">
    </testcase>
    <testcase classname="Transfer /transfers by amount range" name="Transfer /transfers by amount range" time="0.044">
    </testcase>
    <testcase classname="Transfer /transfers by status" name="Transfer /transfers by status" time="0.043">
    </testcase>
    <testcase classname="Transfer /transfers by batchId" name="Transfer /transfers by batchId" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Transfer /transfers overlapping timestamps" name="Transfer /transfers overlapping timestamps" time="0.03">
    </testcase>
    <testcase classname="Transfer /transfers empty dataset" name="Transfer /transfers empty dataset" time="0.023">
    </testcase>
    <testcase classname="Transfer /transfers with mixed statuses" name="Transfer /transfers with mixed statuses" time="0.031">
    </testcase>
    <testcase classname="Transfer /transferStatusSummary" name="Transfer /transferStatusSummary" time="0.034">
    </testcase>
    <testcase classname="Transfer /hourlyFlow no transfers" name="Transfer /hourlyFlow no transfers" time="0.026">
    </testcase>
    <testcase classname="Transfer /minuteAverageTransferResponseTime no transfers" name="Transfer /minuteAverageTransferResponseTime no transfers" time="0.025">
    </testcase>
    <testcase classname="Transfer /transfers partial match on payee alias" name="Transfer /transfers partial match on payee alias" time="0.035">
    </testcase>
    <testcase classname="Transfer Transfer - _transferLastErrorToErrorType should return errorDescription from mojaloopError when mojaloopError is present" name="Transfer Transfer - _transferLastErrorToErrorType should return errorDescription from mojaloopError when mojaloopError is present" time="0.003">
    </testcase>
    <testcase classname="Transfer Transfer - _transferLastErrorToErrorType should return HTTP status message when mojaloopError is not present" name="Transfer Transfer - _transferLastErrorToErrorType should return HTTP status message when mojaloopError is not present" time="0.002">
    </testcase>
    <testcase classname="Transfer Transfer - _transferLastErrorToErrorType should handle undefined error gracefully" name="Transfer Transfer - _transferLastErrorToErrorType should handle undefined error gracefully" time="0.002">
    </testcase>
    <testcase classname="Transfer Transfer - _parseRawTransferRequestBodies should correctly parse stringified body fields to objects" name="Transfer Transfer - _parseRawTransferRequestBodies should correctly parse stringified body fields to objects" time="0.003">
    </testcase>
    <testcase classname="Transfer Transfer - _parseRawTransferRequestBodies should not modify body if it is already an object" name="Transfer Transfer - _parseRawTransferRequestBodies should not modify body if it is already an object" time="0.002">
    </testcase>
    <testcase classname="Transfer Transfer - _parseRawTransferRequestBodies should handle missing body fields without error" name="Transfer Transfer - _parseRawTransferRequestBodies should handle missing body fields without error" time="0.002">
    </testcase>
    <testcase classname="Transfer Transfer - _parseRawTransferRequestBodies should not mutate the original input object (no side-effects)" name="Transfer Transfer - _parseRawTransferRequestBodies should not mutate the original input object (no side-effects)" time="0.002">
    </testcase>
    <testcase classname="Transfer _convertToApiDetailFormat should correctly convert transfer data to API detail format" name="Transfer _convertToApiDetailFormat should correctly convert transfer data to API detail format" time="0.004">
    </testcase>
    <testcase classname="Transfer _getPartyFromQuoteRequest should return default values for undefined qr" name="Transfer _getPartyFromQuoteRequest should return default values for undefined qr" time="0.002">
    </testcase>
    <testcase classname="Transfer _getPartyFromQuoteRequest should return correct party details for valid qr and payer" name="Transfer _getPartyFromQuoteRequest should return correct party details for valid qr and payer" time="0.003">
    </testcase>
    <testcase classname="Transfer _getPartyFromQuoteRequest should return undefined for invalid party type" name="Transfer _getPartyFromQuoteRequest should return undefined for invalid party type" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should return undefined for null or undefined input" name="Transfer _complexNameToDisplayName should return undefined for null or undefined input" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should return full name when all fields are present" name="Transfer _complexNameToDisplayName should return full name when all fields are present" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should return name without middle name if middleName is missing" name="Transfer _complexNameToDisplayName should return name without middle name if middleName is missing" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should return name with only first and middle names if last name is missing" name="Transfer _complexNameToDisplayName should return name with only first and middle names if last name is missing" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should return first name if middle and last names are missing" name="Transfer _complexNameToDisplayName should return first name if middle and last names are missing" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should handle missing first name" name="Transfer _complexNameToDisplayName should handle missing first name" time="0.002">
    </testcase>
    <testcase classname="Transfer _complexNameToDisplayName should handle missing middle and last names" name="Transfer _complexNameToDisplayName should handle missing middle and last names" time="0.002">
    </testcase>
    <testcase classname="Transfer _convertToTransferParty should convert party object to transfer party format with displayName" name="Transfer _convertToTransferParty should convert party object to transfer party format with displayName" time="0.002">
    </testcase>
    <testcase classname="Transfer _convertToTransferParty should handle missing middle and last name, using only first name for displayName" name="Transfer _convertToTransferParty should handle missing middle and last name, using only first name for displayName" time="0.002">
    </testcase>
    <testcase classname="Transfer _convertToTransferParty should handle missing first and last name, using only middle name for displayName" name="Transfer _convertToTransferParty should handle missing first and last name, using only middle name for displayName" time="0.002">
    </testcase>
    <testcase classname="Transfer _convertToTransferParty should handle missing first and middle names, using only last name for displayName" name="Transfer _convertToTransferParty should handle missing first and middle names, using only last name for displayName" time="0.001">
    </testcase>
    <testcase classname="Transfer _convertToTransferParty should handle missing first, middle, and last names, returning an empty displayName" name="Transfer _convertToTransferParty should handle missing first, middle, and last names, returning an empty displayName" time="0.002">
    </testcase>
    <testcase classname="Transfer /findErrors" name="Transfer /findErrors" time="0.029">
    </testcase>
    <testcase classname="Transfer /findOne" name="Transfer /findOne" time="0.027">
    </testcase>
    <testcase classname="Transfer /findOneDetail" name="Transfer /findOneDetail" time="0.028">
    </testcase>
  </testsuite>
</testsuites>